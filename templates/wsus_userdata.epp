<%- | $certname, $master_name, $master_ip, $environment, $role, $run_agent | -%>
<powershell>
$hosts = "$env:windir\System32\drivers\etc\hosts"
"<%= $master_ip %> master.inf.puppet.vm master" | Add-Content -PassThru $hosts
[Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}; 
net user admin "Devops!" /add ;
net localgroup Administrators admin /add ;
wmic USERACCOUNT WHERE "Name='admin'" set PasswordExpires=FALSE ;
net user Administrator "Devops!" ;
wmic USERACCOUNT WHERE "Name='Administrator'" set PasswordExpires=FALSE ;
Set-ExecutionPolicy Bypass -Scope Process -Force;
Install-WindowsFeature -Name UpdateServices -IncludeManagementTools;
New-Item -Path C: -Name WSUS -ItemType Directory;
& "C:\Program Files\Update Services\Tools\wsusutil.exe" postinstall CONTENT_DIR=C:\WSUS
iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
choco install --yes notepadplusplus.install 7zip.install procexp
# Further WSUS Configuration
$wsus = Get-WSUSServer;
$wsusConfig = $wsus.GetConfiguration();
# Set to download updates from Microsoft Updates
Set-WsusServerSynchronization â€“SyncFromMU;
# Set Update Languages to English and save configuration settings
$wsusConfig.AllUpdateLanguagesEnabled = $false;
$wsusConfig.SetEnabledUpdateLanguages("en");
$wsusConfig.Save();
# Get WSUS Subscription and perform initial synchronization to get latest categories
$subscription = $wsus.GetSubscription();
$subscription.StartSynchronizationForCategoryOnly();
While ($subscription.GetSynchronizationStatus() -ne 'NotProcessing') { Write-Host "." -NoNewline; Start-Sleep -Seconds 5 ;};
Write-Host "Sync is done.";
# Configure the Platforms that we want WSUS to receive updates
Get-WsusProduct | where-Object { $_.Product.Title -in ('Windows 10', 'Windows Server 2016','Windows Server 2012 R2') } | Set-WsusProduct;
# Configure the Classifications
Get-WsusClassification | Where-Object { $_.Classification.Title -in ('Update Rollups', 'Security Updates', 'Critical Updates', 'Service Packs', 'Updates') } | Set-WsusClassification;
# Configure Synchronizations
$subscription.SynchronizeAutomatically=$true;
# Set synchronization scheduled for midnight each night
$subscription.SynchronizeAutomaticallyTimeOfDay= (New-TimeSpan -Hours 0);
$subscription.NumberOfSynchronizationsPerDay=1;
$subscription.Save();
# Kick off a synchronization
$subscription.StartSynchronization();
winrm quickconfig -force
</powershell>
